//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Log4Grid.Service
{
    
    
    /// <summary>
    /// The LogServerSection Configuration Section.
    /// </summary>
    public partial class LogServerSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the LogServerSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string LogServerSectionSectionName = "logServerSection";
        
        /// <summary>
        /// Gets the LogServerSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Log4Grid.Service.LogServerSection Instance
        {
            get
            {
                return ((global::Log4Grid.Service.LogServerSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Log4Grid.Service.LogServerSection.LogServerSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Service.LogServerSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Log4Grid.Service.LogServerSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Service.LogServerSection.HostPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="127.0.0.1")]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::Log4Grid.Service.LogServerSection.HostPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Service.LogServerSection.HostPropertyName] = value;
            }
        }
        #endregion
        
        #region Port Property
        /// <summary>
        /// The XML name of the <see cref="Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PortPropertyName = "port";
        
        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Service.LogServerSection.PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=10343)]
        public virtual int Port
        {
            get
            {
                return ((int)(base[global::Log4Grid.Service.LogServerSection.PortPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Service.LogServerSection.PortPropertyName] = value;
            }
        }
        #endregion
        
        #region WorkThreads Property
        /// <summary>
        /// The XML name of the <see cref="WorkThreads"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string WorkThreadsPropertyName = "workThreads";
        
        /// <summary>
        /// Gets or sets the WorkThreads.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The WorkThreads.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Service.LogServerSection.WorkThreadsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=1)]
        public virtual int WorkThreads
        {
            get
            {
                return ((int)(base[global::Log4Grid.Service.LogServerSection.WorkThreadsPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Service.LogServerSection.WorkThreadsPropertyName] = value;
            }
        }
        #endregion
    }
}
