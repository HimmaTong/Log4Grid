//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Log4Grid.Config
{
    
    
    /// <summary>
    /// The Log4GridSection Configuration Section.
    /// </summary>
    public partial class Log4GridSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the Log4GridSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string Log4GridSectionSectionName = "log4GridSection";
        
        /// <summary>
        /// Gets the Log4GridSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Log4Grid.Config.Log4GridSection Instance
        {
            get
            {
                return ((global::Log4Grid.Config.Log4GridSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Log4Grid.Config.Log4GridSection.Log4GridSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Log4GridSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Log4Grid.Config.Log4GridSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Management Property
        /// <summary>
        /// The XML name of the <see cref="Management"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ManagementPropertyName = "management";
        
        /// <summary>
        /// Gets or sets the Management.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Management.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Log4GridSection.ManagementPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Log4Grid.Config.ManagementHandler Management
        {
            get
            {
                return ((global::Log4Grid.Config.ManagementHandler)(base[global::Log4Grid.Config.Log4GridSection.ManagementPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Log4GridSection.ManagementPropertyName] = value;
            }
        }
        #endregion
        
        #region LogStore Property
        /// <summary>
        /// The XML name of the <see cref="LogStore"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string LogStorePropertyName = "logStore";
        
        /// <summary>
        /// Gets or sets the LogStore.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The LogStore.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Log4GridSection.LogStorePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Log4Grid.Config.ManagementHandler LogStore
        {
            get
            {
                return ((global::Log4Grid.Config.ManagementHandler)(base[global::Log4Grid.Config.Log4GridSection.LogStorePropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Log4GridSection.LogStorePropertyName] = value;
            }
        }
        #endregion
        
        #region LogSearch Property
        /// <summary>
        /// The XML name of the <see cref="LogSearch"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string LogSearchPropertyName = "logSearch";
        
        /// <summary>
        /// Gets or sets the LogSearch.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The LogSearch.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Log4GridSection.LogSearchPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Log4Grid.Config.ManagementHandler LogSearch
        {
            get
            {
                return ((global::Log4Grid.Config.ManagementHandler)(base[global::Log4Grid.Config.Log4GridSection.LogSearchPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Log4GridSection.LogSearchPropertyName] = value;
            }
        }
        #endregion
        
        #region User Property
        /// <summary>
        /// The XML name of the <see cref="User"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UserPropertyName = "user";
        
        /// <summary>
        /// Gets or sets the User.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The User.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Log4GridSection.UserPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Log4Grid.Config.ManagementHandler User
        {
            get
            {
                return ((global::Log4Grid.Config.ManagementHandler)(base[global::Log4Grid.Config.Log4GridSection.UserPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Log4GridSection.UserPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Log4Grid.Config
{
    
    
    /// <summary>
    /// The ManagementHandler Configuration Element.
    /// </summary>
    public partial class ManagementHandler : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.ManagementHandler.NamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Log4Grid.Config.ManagementHandler.NamePropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.ManagementHandler.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.ManagementHandler.TypePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Log4Grid.Config.ManagementHandler.TypePropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.ManagementHandler.TypePropertyName] = value;
            }
        }
        #endregion
        
        #region Properties Property
        /// <summary>
        /// The XML name of the <see cref="Properties"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PropertiesPropertyName = "properties";
        
        /// <summary>
        /// Gets or sets the Properties.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Properties.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.ManagementHandler.PropertiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Log4Grid.Config.PropertyCollection Properties
        {
            get
            {
                return ((global::Log4Grid.Config.PropertyCollection)(base[global::Log4Grid.Config.ManagementHandler.PropertiesPropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.ManagementHandler.PropertiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Log4Grid.Config
{
    
    
    /// <summary>
    /// The Property Configuration Element.
    /// </summary>
    public partial class Property : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Property.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Log4Grid.Config.Property.NamePropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Property.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Log4Grid.Config.Property.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Log4Grid.Config.Property.ValuePropertyName]));
            }
            set
            {
                base[global::Log4Grid.Config.Property.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Log4Grid.Config
{
    
    
    /// <summary>
    /// A collection of Property instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Log4Grid.Config.Property), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Log4Grid.Config.PropertyCollection.PropertyPropertyName)]
    public partial class PropertyCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Log4Grid.Config.Property"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PropertyPropertyName = "property";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Log4Grid.Config.PropertyCollection.PropertyPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Log4Grid.Config.PropertyCollection.PropertyPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Log4Grid.Config.Property)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Log4Grid.Config.Property"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Log4Grid.Config.Property"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Log4Grid.Config.Property();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Log4Grid.Config.Property"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Log4Grid.Config.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Log4Grid.Config.Property this[int index]
        {
            get
            {
                return ((global::Log4Grid.Config.Property)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Log4Grid.Config.Property"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Log4Grid.Config.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Log4Grid.Config.Property this[object name]
        {
            get
            {
                return ((global::Log4Grid.Config.Property)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Log4Grid.Config.Property"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Log4Grid.Config.Property"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Log4Grid.Config.Property property)
        {
            base.BaseAdd(property);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Log4Grid.Config.Property"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Log4Grid.Config.Property"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Log4Grid.Config.Property property)
        {
            base.BaseRemove(this.GetElementKey(property));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Log4Grid.Config.Property"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Log4Grid.Config.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Log4Grid.Config.Property GetItemAt(int index)
        {
            return ((global::Log4Grid.Config.Property)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Log4Grid.Config.Property"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Log4Grid.Config.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Log4Grid.Config.Property GetItemByKey(string name)
        {
            return ((global::Log4Grid.Config.Property)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
